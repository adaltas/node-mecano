// Generated by CoffeeScript 2.5.1
// # `nikita.docker.tools.service`

// Run a container in a service mode. This module is just a wrapper for
// `docker.run`. It declares the same configuration with the exeception of the
// properties `detach` and `rm` which respectively default to `true` and `false`.

// Indeed, in a service mode, the container must be detached and NOT removed by default
// after execution. 

// ## Hooks
var handler, on_action, schema;

on_action = function({config}) {
  return config.container != null ? config.container : config.container = config.name;
};

// ## Schema
schema = {
  type: 'object',
  properties: {
    'detach': {
      default: true
    },
    'rm': {
      default: false
    }
  },
  required: ['container', 'image'],
  $ref: 'module://@nikitajs/docker/src/run#/properties'
};

// ## Handler
handler = async function({
    config,
    tools: {find, log}
  }) {
  var k, ref, v;
  log({
    message: "Entering Docker service",
    level: 'DEBUG',
    module: 'nikita/lib/docker/service'
  });
  // Global config
  config.docker = (await find(function({
      config: {docker}
    }) {
    return docker;
  }));
  ref = config.docker;
  for (k in ref) {
    v = ref[k];
    if (config[k] == null) {
      config[k] = v;
    }
  }
  // Normalization
  if (config.detach == null) {
    config.detach = true;
  }
  if (config.rm == null) {
    config.rm = false;
  }
  // Validation
  return (await this.docker.run(config));
};

// ## Exports
module.exports = {
  handler: handler,
  hooks: {
    on_action: on_action
  },
  metadata: {
    schema: schema
  }
};
