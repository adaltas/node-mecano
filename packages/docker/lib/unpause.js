// Generated by CoffeeScript 2.5.1
// # `nikita.docker.unpause`

// Unpause all processes within a container.

// ## Options

// * `boot2docker` (boolean)   
//   Whether to use boot2docker or not, default to false.
// * `container` (string)   
//   Name/ID of the container, required.
// * `machine` (string)   
//   Name of the docker-machine, required if using docker-machine.

// ## Callback parameters

// * `err`   
//   Error object if any.
// * `status`   
//   True if container was unpaused.

// ## Example

// ```javascript
// require('nikita')
// .docker.pause({
//   container: 'toto'
// }, function(err, {status}){
//   console.log( err ? err.message : 'Container was unpaused: ' + status);
// })
// ```

// ## Schema
var docker, handler, schema, util;

schema = {
  type: 'object',
  properties: {}
};

// ## Handler
handler = function({
    config,
    log,
    operations: {find}
  }) {
  var k, ref, v;
  log({
    message: "Entering Docker unpause",
    level: 'DEBUG',
    module: 'nikita/lib/docker/unpause'
  });
  // Global config
  if (config.docker == null) {
    config.docker = {};
  }
  ref = config.docker;
  for (k in ref) {
    v = ref[k];
    if (config[k] == null) {
      config[k] = v;
    }
  }
  if (config.container == null) {
    // Validation
    throw Error('Missing container parameter');
  }
  return this.execute({
    cmd: docker.wrap(config, `unpause ${config.container}`)
  }, function() {
    return docker.callback(callback, ...arguments);
  });
};

// ## Exports
module.exports = {
  handler: handler,
  schema: schema
};

// ## Dependencies
docker = require('./utils');

util = require('util');
