# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64" # LTS bionic64
  config.ssh.insert_key = true
  config.vm.box_check_update = false
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "../../../", "/nikita"
  # Private network could be removed, just to provide a network access point
  config.vm.network :private_network, ip: "192.168.52.10"
  config.vm.network :forwarded_port, guest: 2200, host: 2200, auto_correct: true
  config.vm.network :forwarded_port, guest: 8443, host: 8443, auto_correct: true
  config.vbguest.no_remote = true
  config.vbguest.auto_update = false

  config.vm.provider "virtualbox" do |vb|
    vb.name = 'lxd'
    # Do this as a linked clone if we can.
    vb.linked_clone = true if Gem::Version.new(Vagrant::VERSION) >= Gem::Version.new('1.8.0')
    # Containers are light, but we should still have some resources.
    vb.memory = 4096
    # At least 2 CPUs
    vb.cpus = 2
    vagrant_root = File.dirname(File.expand_path(__FILE__))
    file_to_disk = File.join(vagrant_root, 'lxd_zpool.vdi')
    unless File.exist?(file_to_disk)
      # lxc images are tiny by default. Not much storage needed.
      vb.customize ['createhd', '--filename', file_to_disk, '--size', 10 * 1024]
    end
    # enabling hostiocache like this isn't safe, but it should be faster.
    vb.customize ['storagectl', :id, '--name', 'SCSI', '--hostiocache', 'on']
    vb.customize ['storageattach', :id, '--storagectl', 'SCSI', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]
  end

  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y zfsutils-linux
    zpool create -f lxd /dev/sdc
    lxd init --auto --storage-backend=zfs --storage-pool=lxd
    # wdavidw: nov 12th, 2019: throw the error `chmod: cannot access '/usr/local/bin/*': No such file or directory`
    # chmod a+rx /usr/local/bin/*
    # If we keep this VM around, let's keep images up to date but not nuke them so fast.
    lxc config set core.https_address '[::]:8443'
    lxc config set core.trust_password "secret"
    lxc config set images.remote_cache_expiry 30
    lxc config set images.auto_update_interval 24
    lxc config set images.auto_update_cached true
    # Start out by preloading/caching some container images
    # lxc launch -e images:centos/7 preload
    # lxc delete --force preload
    # lxc launch -e images:centos/6 preload
    # lxc delete --force preload
    # lxc launch -e images:ubuntu/xenial preload
    # lxc delete --force preload
    # Install Node.js to run the tests
    curl -L https://git.io/n-install | bash -s -- -y
    # Append lxd group to vagrant user
    usermod --append --groups lxd vagrant
  SHELL
end
