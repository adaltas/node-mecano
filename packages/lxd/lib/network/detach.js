// Generated by CoffeeScript 2.5.1
// # `nikita.lxd.network.detach`

// Detach a network from a container.

// ## Callback parameters

// * `err`
//   Error object if any
// * `status`
//   True if the network was detached

// ## Example

// ```js
// require('nikita')
// .lxd.network.detach({
//   network: 'network0'
//   container: 'container1'
// }, function(err, {status}){
//   console.info( err ? err.message : 'Network detached  : ' + status);
// })
// ```

// ## Schema
var handler, schema;

schema = {
  type: 'object',
  properties: {
    'network': {
      type: 'string',
      description: `The network name to detach.`
    },
    'container': {
      $ref: 'module://@nikitajs/lxd/src/init#/properties/container'
    }
  },
  required: ['network', 'container']
};

// ## Handler
handler = function({config}) {
  // log message: "Entering lxd.network.detach", level: "DEBUG", module: "@nikitajs/lxd/lib/network/detach"
  //Execute
  return this.execute({
    cmd: `lxc config device list ${config.container} | grep ${config.network} || exit 42
${['lxc', 'network', 'detach', config.network, config.container].join(' ')}`,
    code_skipped: 42
  });
};

// ## Export
module.exports = {
  handler: handler,
  schema: schema
};
