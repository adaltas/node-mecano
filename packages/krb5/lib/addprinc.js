// Generated by CoffeeScript 2.5.1
// # `nikita.krb5.addprinc`

// Create a new Kerberos principal with a password or an optional keytab.

// ## Example

// ```js
// require('nikita').krb5.addprinc({
//   admin: {
//     password: 'pass',
//     principal: 'me/admin@MY_REALM',
//     server: 'localhost'
//   },
//   keytab: '/etc/security/keytabs/my.service.keytab',
//   gid: 'myservice',
//   principal: 'myservice/my.fqdn@MY.REALM',
//   randkey: true,
//   uid: 'myservice'
// }, function(err, {status}){
//   console.info(err ? err.message : 'Principal created or modified: ' + status);
// });
// ```

// ## Schema
var handler, mutate, schema, utils;

schema = {
  type: 'object',
  properties: {
    'admin': {
      $ref: 'module://@nikitajs/krb5/src/execute#/properties/admin'
    },
    'keytab': {
      type: 'string',
      description: `Path to the file storing key entries.`
    },
    'password': {
      type: 'string',
      description: `Password associated to this principal.`
    },
    'password_sync': {
      type: 'boolean',
      default: false,
      description: `Wether the password should be created if the principal already exists.`
    },
    'principal': {
      type: 'string',
      description: `Principal to be created.`
    },
    'randkey': {
      type: 'boolean',
      description: `Generate a random key.`
    }
  },
  required: ['admin', 'principal'],
  oneOf: [
    {
      required: ['password']
    },
    {
      required: ['randkey']
    }
  ]
};

// ## Handler
handler = async function({config}) {
  var base, cache_name, ref, status;
  if (/.*@.*/.test((ref = config.admin) != null ? ref.principal : void 0)) {
    // Normalize realm and principal for later usage of config
    if ((base = config.admin).realm == null) {
      base.realm = config.admin.principal.split('@')[1];
    }
  }
  if (!/^\S+@\S+$/.test(config.principal)) {
    config.principal = `${config.principal}@${config.admin.realm}`;
  }
  // Start execution
  ({status} = (await this.krb5.execute({
    admin: config.admin,
    cmd: `getprinc ${config.principal}`,
    grep: new RegExp(`^.*${utils.regexp.escape(config.principal)}$`),
    shy: true
  })));
  if (!status) {
    await this.krb5.execute({
      admin: config.admin,
      cmd: config.password ? `addprinc -pw ${config.password} ${config.principal}` : `addprinc -randkey ${config.principal}`,
      retry: 3
    });
  }
  if (config.password && config.password_sync) {
    cache_name = `/tmp/nikita_${Math.random()}`;
    await this.krb5.execute({
      unless_execute: `if ! echo ${config.password} | kinit '${config.principal}' -c '${cache_name}'; then exit 1; else kdestroy -c '${cache_name}'; fi`,
      admin: config.admin,
      cmd: `cpw -pw ${config.password} ${config.principal}`,
      retry: 3
    });
  }
  if (!config.keytab) {
    return;
  }
  return this.krb5.ktadd(config);
};

// ## Export
module.exports = {
  handler: handler,
  metadata: {
    global: 'krb5'
  },
  schema: schema
};

// ## Dependencies
utils = require('@nikitajs/engine/src/utils');

({mutate} = require('mixme'));
