// Generated by CoffeeScript 2.5.1
// # `nikita.db.schema.exists`

// Create a database for the destination database.

// ## Create Schema example

// ```js
// const {exists} = await nikita.db.schema.exists({
//   admin_username: 'test',
//   admin_password: 'test',
//   database: 'my_db'
// })
// console.info(`Schema exists: ${exists}`)
// ```

// ## Schema
var command, handler, schema;

schema = {
  type: 'object',
  properties: {
    'admin_username': {
      $ref: 'module://@nikitajs/db/lib/query#/properties/admin_username'
    },
    'admin_password': {
      $ref: 'module://@nikitajs/db/lib/query#/properties/admin_password'
    },
    'database': {
      type: 'string',
      description: `The database name where the schema is created.`
    },
    'engine': {
      $ref: 'module://@nikitajs/db/lib/query#/properties/engine'
    },
    'host': {
      $ref: 'module://@nikitajs/db/lib/query#/properties/host'
    },
    'port': {
      $ref: 'module://@nikitajs/db/lib/query#/properties/port'
    },
    'owner': {
      type: 'string',
      description: `The Schema owner. Alter Schema if schema already exists.`
    },
    'schema': {
      type: 'string',
      description: `New schema name.`
    }
  },
  required: ['admin_username', 'admin_password', 'database', 'engine', 'host', 'schema']
};

// ## Handler
handler = async function({config}) {
  var $status;
  ({$status} = (await this.db.query(config, {
    command: `SELECT 1 FROM pg_namespace WHERE nspname = '${config.schema}';`,
    grep: '1'
  })));
  return {
    exists: $status
  };
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    global: 'db',
    schema: schema
  }
};


  // ## Dependencies
({command} = require('../query'));
