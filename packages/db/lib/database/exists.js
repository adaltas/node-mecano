// Generated by CoffeeScript 2.5.1
// # `nikita.db.database.exists`

// Check if a database exists.

// ## Schema
var command, connection_config, handler, schema;

schema = {
  type: 'object',
  properties: {
    'admin_username': {
      $ref: 'module://@nikitajs/db/src/query#/properties/admin_username'
    },
    'admin_password': {
      $ref: 'module://@nikitajs/db/src/query#/properties/admin_password'
    },
    'database': {
      type: 'string',
      description: `The database name to check for existance.`
    },
    'engine': {
      $ref: 'module://@nikitajs/db/src/query#/properties/engine'
    },
    'host': {
      $ref: 'module://@nikitajs/db/src/query#/properties/host'
    },
    'port': {
      $ref: 'module://@nikitajs/db/src/query#/properties/port'
    }
  },
  required: ['admin_username', 'admin_password', 'database', 'engine', 'host']
};

// ## Handler
handler = async function({config}) {
  var status;
  ({status} = (await this.db.query(connection_config(config), {
    command: (function() {
      switch (config.engine) {
        case 'mariadb':
        case 'mysql':
          return 'SHOW DATABASES';
        case 'postgresql':
          // Not sure why we're not using \l
          return `SELECT datname FROM pg_database WHERE datname = '${config.database}'`;
      }
    })(),
    database: null,
    grep: config.database
  })));
  return {
    exists: status
  };
};

// ## Exports
module.exports = {
  handler: handler,
  metadata: {
    argument_name: 'database',
    global: 'db',
    shy: true
  },
  schema: schema
};

// ## Dependencies
({command, connection_config} = require('../query'));
