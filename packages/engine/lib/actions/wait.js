// Generated by CoffeeScript 2.5.1
// # `nikita.wait`

// Wait for some time before executing the following action. Internally, this is a
// simple action that calls setTimeout. Thus, time is in millisecond.

// ## Example

// ```js
// before = Date.now();
// require('nikita')
// .wait({
//   time: 5000
// }, function(err, {status}){
//   throw Error 'TOO LATE!' if (Date.now() - before) > 5200
//   throw Error 'TOO SOON!' if (Date.now() - before) < 5000
// })
// ```

// ## Hook
var handler, on_action, schema;

on_action = function({config, metadata}) {
  if (metadata.argument != null) {
    if (config.time == null) {
      config.time = metadata.argument;
    }
  }
  if (typeof config.time === 'string') {
    return config.time = parseInt(config.time);
  }
};

// ## Schema
schema = {
  type: 'object',
  properties: {
    'time': {
      type: 'integer',
      description: `Time in millisecond to wait for.`
    }
  },
  required: ['time']
};

// ## Handler
handler = function({config, metadata}) {
  return new Promise(function(resolve) {
    return setTimeout(resolve, config.time);
  });
};

// ## Exports
module.exports = {
  handler: handler,
  on_action: on_action,
  schema: schema
};
