// Generated by CoffeeScript 2.5.1
// # `nikita.ssh.close`

// Close the existing connection if any.

// ## Configuration

// * `ssh` (boolean)   
//   Return the SSH connection if any and if true, null if false.

// ## Schema
var handler, schema;

schema = {
  type: 'object',
  properties: {
    'ssh': {
      instanceof: 'Object',
      description: `The SSH connection to close, default to currently active SSH
connection avaible to the action.`
    }
  }
};

// ## Source code
handler = function({
    config,
    parent: {state}
  }) {
  var conn, ref, ref1;
  this.log({
    message: "Entering ssh.close",
    level: 'DEBUG',
    module: 'nikita/lib/ssh/close'
  });
  // Retrieve connection from parameters or state
  conn = config.ssh ? config.ssh : state['nikita:ssh:connection'];
  if (!conn) {
    // Exit unless their is a connection to close
    return false;
  }
  if (!(((ref = conn._sshstream) != null ? ref.writable : void 0) && ((ref1 = conn._sock) != null ? ref1.writable : void 0))) {
    // Exit if the connection is already close
    return false;
  }
  // Terminate the connection
  return new Promise(function(resolve, reject) {
    conn.end();
    conn.on('error', reject);
    return conn.on('end', function() {
      delete state['nikita:ssh:connection'];
      return resolve(true);
    });
  });
};

// ## Exports
module.exports = {
  handler: handler,
  schema: schema
};
