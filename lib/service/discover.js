// Generated by CoffeeScript 2.3.1
// # `nikita.service.discover(options, [callback])`

// Discover the OS init loader.
// For now it only supports Centos/Redhat OS in version 6 or 7, Ubuntu.
// Store properties in the nikita store object.

// ## Options

// * `strict` (boolean)   
//   Throw an error if the OS is not supported. false by default.   
// * `cache`   
//   Disable cache. false by default   

// ## Callback parameters

// * `err`   
//   Error object if any.   
// * `status`   
//   Indicate a change in service such as a change in installation, update, 
//   start/stop or startup registration.   
// * `loader`   
//   the init loader name   

// ## Source Code
module.exports = function(options, callback) {
  var detected, loader;
  detected = false;
  loader = null;
  if (options.strict == null) {
    options.strict = false;
  }
  if (options.shy == null) {
    options.shy = true;
  }
  if (options.cache == null) {
    options.cache = true;
  }
  this.system.execute({
    shy: options.shy,
    unless: this.store['nikita:service:loader'] != null,
    cmd: "if command -v systemctl >/dev/null; then exit 1; fi ;\nif command -v service >/dev/null; then exit 2; fi ;\nexit 3 ;",
    code: [1, 2],
    shy: true
  }, function(err, status, stdout, stderr, signal) {
    if ((err != null ? err.code : void 0) === 3 && options.strict) {
      throw Error("Undetected Operating System Loader");
    }
    loader = (function() {
      switch (signal) {
        case 1:
          return 'systemctl';
        case 2:
          return 'service';
      }
    })();
    if (options.cache) {
      return this.store['nikita:service:loader'] = options.loader;
    }
  });
  return this.next(function(err, {status}) {
    if (options.cache && (loader == null)) {
      loader = this.store['nikita:service:loader'] != null;
    }
    return callback(err, {
      status: status,
      loader: loader
    });
  });
};
