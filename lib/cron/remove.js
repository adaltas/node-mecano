// Generated by CoffeeScript 2.3.1
// # `nikita.cron.remove(options, [callback])`

// Remove job(s) on crontab.

// ## Options

// * `user` (name | uid)   
//   the user of the crontab. the SSH user by default   
// * `when` (string)   
//   cron-styled time string. Defines the frequency of the cron job. By default all
//   frequency will match.   
// * `cmd`   
//   the shell command of the job. By default all jobs will match.   
// * `log`   
//   Function called with a log related messages.   
// * `ssh` (object|ssh2)   
//   Run the action on a remote server using SSH, an ssh2 instance or an
//   configuration object used to initialize the SSH connection.   
// * `stdout` (stream.Writable)   
//   Writable EventEmitter in which the standard output of executed commands will
//   be piped.   
// * `stderr` (stream.Writable)   
//   Writable EventEmitter in which the standard error output of executed command
//   will be piped.   

// ## Example

// ```js
// require('nikita').cron.remove({
//   cmd: 'kinit service/my.fqdn@MY.REALM -kt /etc/security/service.keytab',
//   when: '0 */9 * * *'
//   user: 'service'
// }, function(err, status){
//   console.log(err ? err.message : 'Cron entry created or modified: ' + !!status);
// });
// ```

// ## Source Code
var regexp, wrap;

module.exports = function(options, callback) {
  var crontab, jobs, ref, status;
  if (!(((ref = options.cmd) != null ? ref.length : void 0) > 0)) {
    return callback(Error('valid cmd is required'));
  }
  if (options.user != null) {
    this.log({
      message: `Using user ${options.user}`,
      level: 'INFO',
      module: 'nikita/cron/remove'
    });
    crontab = `crontab -u ${options.user}`;
  } else {
    this.log({
      message: "Using default user",
      level: 'INFO',
      module: 'nikita/cron/remove'
    });
    crontab = "crontab";
  }
  status = false;
  jobs = [];
  return this.system.execute({
    cmd: `${crontab} -l`,
    shy: true
  }, function(err, {stdout, stderr}) {
    var i, j, job, len, myjob, regex;
    if (err) {
      throw err;
    }
    if (/^no crontab for/.test(stderr)) {
      throw Error('User crontab not found');
    }
    myjob = options.when ? regexp.escape(options.when) : '.*';
    myjob += regexp.escape(` ${options.cmd}`);
    regex = new RegExp(myjob);
    jobs = stdout.trim().split('\n');
    for (i = j = 0, len = jobs.length; j < len; i = ++j) {
      job = jobs[i];
      if (!regex.test(job)) {
        continue;
      }
      this.log({
        message: `Job '${job}' matches. Removing from list`,
        level: 'WARN',
        module: 'nikita/cron/remove'
      });
      status = true;
      jobs.splice(i, 1);
    }
    return this.log({
      message: "No Job matches. Skipping",
      level: 'INFO',
      module: 'nikita/cron/remove'
    });
  }).system.execute({
    cmd: `${crontab} - <<EOF\n${jobs.join('\n')}\nEOF`,
    if: function() {
      return status;
    }
  }).next(callback);
};

// ## Dependencies
({regexp} = require('../misc'));

wrap = require('../misc/wrap');
