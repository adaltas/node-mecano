// Generated by CoffeeScript 2.3.1
// # `nikita.file.touch(options, [callback])`

// Create a empty file if it does not yet exists.

// ## Implementation details

// Status will only be true if the file was created.

// ## Options

// * `atime` (Date|int)  
//   Access time, default to now.   
// * `gid`   
//   File group name or group id.   
// * `mode`   
//   File mode (permission and sticky bits), default to `0o0666`, in the form of
//   `{mode: 0o0744}` or `{mode: "0744"}`.   
// * `mtime` (Date|int)  
//   Modification time, default to now.   
// * `target`   
//   File path where to write content to.   
// * `uid`   
//   File user name or user id.   

// ## Callback Parameters

// * `err`   
//   Error object if any.   
// * `status`   
//   Value is "true" if file was created or modified.   

// ## Example

// ```js
// require('nikita').file.touch({
//   ssh: ssh,
//   target: '/tmp/a_file'
// }, function(err, touched){
//   console.log(err ? err.message : 'File touched: ' + !!touched);
// });
// ```

// ## Source Code
module.exports = function(options) {
  var ssh;
  this.log({
    message: "Entering file.touch",
    level: 'DEBUG',
    module: 'nikita/lib/file/touch'
  });
  // SSH connection
  ssh = this.ssh(options.ssh);
  if (options.argument != null) {
    // Options
    options.target = options.argument;
  }
  if (!options.target) {
    throw Error(`Missing target: ${options.target}`);
  }
  // Test if file exists.
  this.call(function(_, callback) {
    this.log({
      message: `Check if target exists "${options.target}"`,
      level: 'DEBUG',
      module: 'nikita/lib/file/touch'
    });
    return this.fs.exists({
      ssh: options.ssh,
      target: options.target
    }, function(err, {exists}) {
      if (!err && !exists) {
        this.log({
          message: "Destination does not exists",
          level: 'INFO',
          module: 'nikita/lib/file/touch'
        });
      }
      return callback(err, !exists);
    });
  });
  // If true, update access and modification time, status wont be affected
  this.system.execute({
    unless: function() {
      return this.status();
    },
    cmd: `touch ${options.target}`,
    shy: true
  }, function(err) {
    if (!err) {
      return this.log({
        message: "Access and modification times updated",
        level: 'DEBUG',
        module: 'nikita/lib/file/touch'
      });
    }
  });
  // If not, write a new empty file.
  return this.file({
    content: '',
    target: options.target,
    if: function() {
      return this.status();
    },
    mode: options.mode,
    uid: options.uid,
    gid: options.gid
  });
};
